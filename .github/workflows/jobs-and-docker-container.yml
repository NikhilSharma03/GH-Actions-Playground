name: Jobs and Docker Container

on:
  push:
    branches:
      - main

env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: docker-demo

jobs:
  test:
    defaults:
      run:
        working-directory: jobs-and-docker-container

    runs-on: ubuntu-latest
    container: # runs the steps in container which is hosted on the runner
      image: node:16

    services: # run alongside this job (will shutdown once job finished)
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example

    environment: docker-container
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CLUSTER_ADDRESS: mongodb # if running job in container (to connect with mongodb service)
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      PORT: 8080

    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
